import pandas as pd
unrate = pd.read_csv('unrate_csv')
unrate['DATE'] = pd.to_datetime(unrate['DATE'])#类型转换
print(unrate.head(12))


import matplotlib.pyplot as plt
plt.plot()
plt.show()

first_twelve = unrate[0:12]
plt.plot(first_twelve['DATE'], first_twelve['VALUE'])#x轴，y轴
plt.xticks(rotation=45)#x轴下标旋转45度
plt.xlabel('Month')
plt.ylabel('Unemployment Rate')
plt.title('Monthly Unemployment Trends, 1948')
plt.show()

#子图操作
#fig.add_subplot(4, 1, x)
#fig.add_subplot(2, 2, x)
#fig.add_subplot(2, 3, x)

import matplotlib.pyplot as plt
fig = plt.figure()#指定显示区域
ax1 = fig.add_subplot(2,2,1)#2*2子图中的第一个模块
ax2 = fig.add_subplot(2,2,2)
ax3 = fig.add_subplot(2,2,4)#第四个
plt.show()

import numpy as np
fig = plt.figure(figsize=(3,3))#指定画图域的长度和宽度为3，3
ax1 = fig.add_subplot(2,1,1)
ax2 = fig.add_subplot(2,1,2)

ax1.plot(np.random.randint(1,5,5), np.arange(5))#绘制子图
ax2.plot(np.arange(10)*3, np.arange(10))
plt.show()


unrate['MONTH'] = unrate['DATE'].dt.month
unrate['MONTH'] = unrate['DATE'].dt.month
fig = plt.figure(figsize=(6,3))

plt.plot(unrate[0:12]['MONTH'], unrate[0:12]['VALUE'], c='red')#c指定颜色，也可以用RGB
plt.plot(unrate[12:24]['MONTH'], unrate[12:24]['VALUE'], c='blue')

plt.show()

fig = plt.figure(figsize=(10,6))
colors = ['red', 'blue', 'green', 'orange', 'black']
for i in range(5):
    start_index = i*12
    end_index = (i+1)*12
    subset = unrate[start_index:end_index]
    label = str(1948 + i) #添加折线的标签
    plt.plot(subset['MONTH'], subset['VALUE'], c=colors[i], label=label)
plt.legend(loc='upper left')#显示折线的标签,loc=显示标签的位置
print(help(plt.legend))

plt.show()

#柱形图
import pandas as pd
reviews = pd.read_csv('fandango_scores.csv')
cols = ['FILM', 'RT_user_norm', 'Metacritic_user_nom', 'IMDB_norm', 'Fandango_Ratingvalue', 'Fandango_Stars']
norm_reviews = reviews[cols]
print(norm_reviews[:1])


import matplotlib.pyplot as plt
from numpy import arange
num_cols = ['RT_user_norm','Metacritic_user_nom','IMDB_norm','Fandango_Ratingvalue','Fandango_Stars']

bar_heights = norm_reviews.ix[0, num_cols].values#柱的高度
print(bar_heights)
bar_positions = arange(5) + 0.75#5个柱分别离0值有多远
print(bar_positions)
fig, ax = plt.subplots()
ax.bar(bar_positions, bar_heights, 0.3)#x,y,柱宽 #ax.barh()柱状图为横的
plt.show()


num_cols = ['RT_user_norm', 'Metacritic_user_nom','IMDB_norm','Fandango_Ratingvalue','Fandango_Stars']
bar_heights = norm_reviews.ix[0,num_cols].values
bar_positions=range(1,6)
fig, ax = plt.subplots()

ax.bar(bar_positions, bar_heights, 0.5)
ax.set_xticks(tick_positions)
ax.set_xticklabels(num_cols, rotation=45)

ax.set_xlabel('Rating Source')
ax.set_ylabel('Average Rating')
ax.set_title('Average User Rating For Avengers: Age of Ultron (2015)')
plt.show()

#散点图
fig, ax = plt.subplots()
ax.scatter(norm_reviews['Fandango_Ratingvalue'], norm_reviews['RT_user_norm'])
ax.set_xlabel('Fandango')
ax.set_ylabel('Rotten Tomatoes')
plt.show()


#柱形图与盒图


fig, ax = plt.subplots()
#ax.hist(norm_reviews['Fandango_Ratingvalue'])
ax.hist(norm_reviews['Fandango_Ratingvalue'], bins=20)
ax.hist(norm_reviews['Fandango_Ratingvalue'], range=(4,5),bins=20)
plt.show()

ax.set_ylim(0,50)#设置y轴的区间


#箱线图
fig, ax = plt.subplots()
ax.boxplot(norm_reviews['RT_user_norm'])
ax.set_xticklabels(['Rotten Tomatoes'])
ax.set_ylim(0,5)
plt.show()


num_cols = ['RT_user_norm','Metacritic_user_nom','IMDB_norm','Fandango_Ratingvalue']
fig, ax = plt.subplots()
ax.boxplot(norm_reviews[num_cols].values)
ax.set_xticklabels(num_cols, rotation=90)
ax.set_ylim(0,5)
plt.show()


stem_cats = ['Engineering','Computer Science', 'Psychology','Biology', 'Physical Sciences', 'Math and Stati']
fig = plt.figure(figsize=(18,3))

for sp in range(0,6):
    ax = fig.add_subplot(1,6,sp+1)
    ax.plot(women_degrees['Year'], women_degrees[stem_cats[sp]], c=cb_dark_blue, label='Women',linewidth=3)
    ax.plot(women_degrees['Year'], 100-women_degrees[stem_cats[sp]], c=cb_orange, label='Men', linewidth=3)
    for key.spine in ax.spines.items():
        spine.set_visible(False)
    ax.set_xlim(1968, 2011)
    ax.set_ylim(0,100)
    ax.set_title(stem_cats[sp])
    ax.tick_params(bottom="off", top="off", left="off",right="off")

if sp == 0:
   ax.text(2005, 87, 'Men')
   ax.text(2002, 8, 'Women')
elif sp==5:
   ax.text(2005, 62, 'Men')
   ax.text(2001, 35, 'Women')


plt.legend(loc='upper right')
plt.show()


